name: Build Chrome Bundle

on:
  schedule:
    - cron: '0 6 * * *' # ⏰ Runs daily at 06:00 UTC to check for new releases
  workflow_dispatch: # 🔘 Allow manual trigger

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🔧 Configure APT and install required tools
        run: |
          # Ensure we have all repositories enabled
          sudo add-apt-repository main
          sudo add-apt-repository universe
          sudo add-apt-repository multiverse
          sudo add-apt-repository restricted

          # Update package lists
          sudo apt-get update

          # Install required tools
          sudo apt-get install -y wget curl unzip dpkg-dev apt-utils software-properties-common libatk1.0-0 libatk-bridge2.0-0

      - name: 🔍 Get latest stable Chrome version
        id: chrome
        run: |
          latest=$(curl -s https://dl.google.com/linux/chrome/deb/dists/stable/main/binary-amd64/Packages | \
            grep -A1 "Package: google-chrome-stable" | grep "Version:" | head -n1 | awk '{print $2}')
          echo "Latest Chrome version: $latest"
          echo "version=$latest" >> $GITHUB_OUTPUT

      - name: 📥 Download latest Chrome Linux build
        run: |
          mkdir -p chrome-linux
          cd chrome-linux
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          dpkg-deb -x google-chrome-stable_current_amd64.deb .
          mv opt/google/chrome/* .
          rm -rf opt usr google-chrome-stable_current_amd64.deb

      - name: 📥 Download dependencies with improved method
        run: |
          # Make script executable
          chmod +x ./scripts/fetch-libs.sh

          # Run the script with sudo to ensure proper permissions
          sudo ./scripts/fetch-libs.sh

          # Alternative: Install dependencies and copy libs
          # This is a fallback method if the script fails
          if [ ! -d "chrome-linux/lib" ] || [ -z "$(ls -A chrome-linux/lib 2>/dev/null)" ]; then
            echo "⚠️ fetch-libs.sh didn't populate libs, using fallback method..."
            
            mkdir -p chrome-linux/lib
            
            # Install all required packages
            sudo apt-get install -y \
              libatk1.0-0 libatk-bridge2.0-0 libcups2 libgbm1 \
              libgtk-3-0 libasound2 libnss3 libxshmfence1 \
              libdrm2 libdbus-1-3 libglib2.0-0 libgdk-pixbuf-2.0-0 \
              libpango-1.0-0 libpangocairo-1.0-0 libcurl4 \
              libxcomposite1 libxdamage1 libxrandr2 libx11-6 \
              libxext6 libexpat1 libxi6 libxrender1 libcairo2 \
              libudev1 libpcre3 libxcb1 libxkbcommon0 \
              libatspi2.0-0 libavahi-common3 libavahi-client3 || true
            
            # Copy installed libraries
            for lib in /usr/lib/x86_64-linux-gnu/*.so*; do
              if [ -f "$lib" ]; then
                cp -L "$lib" chrome-linux/lib/ 2>/dev/null || true
              fi
            done
          fi

          # Verify we have some libraries
          lib_count=$(find chrome-linux/lib -name "*.so*" 2>/dev/null | wc -l)
          echo "📊 Found $lib_count library files in chrome-linux/lib"

      - name: 🔍 List Chrome dependencies (for debugging)
        run: |
          echo "Chrome binary dependencies:"
          ldd chrome-linux/chrome | head -20 || true
          echo "..."
          echo "Library directory contents:"
          ls -la chrome-linux/lib/ | head -20 || echo "No lib directory found"

      - name: 📦 Create zip archive
        run: |
          # Create a README
          cat > chrome-linux/README.md << 'EOF'
          # Chrome Linux Bundle

          This bundle includes Chrome and its required shared libraries.

          ## Usage

          Run Chrome using the wrapper script:
          ```bash
          ./run-chrome.sh
          ```

          Or manually with LD_LIBRARY_PATH:
          ```bash
          LD_LIBRARY_PATH=./lib:$LD_LIBRARY_PATH ./chrome
          ```
          EOF

          # Create the archive
          zip -r chrome-linux-${{ steps.chrome.outputs.version }}.zip chrome-linux

      - name: 🚀 Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.chrome.outputs.version }}
          name: Chrome ${{ steps.chrome.outputs.version }}
          body: |
            Automatic build of Chrome Linux bundle with required shared libraries.

            ## What's included
            - Chrome browser binary (version ${{ steps.chrome.outputs.version }})
            - All required shared libraries in `lib/` directory
            - `run-chrome.sh` wrapper script for easy launching

            ## Usage
            1. Extract the zip file
            2. Run `./chrome-linux/run-chrome.sh`
          files: chrome-linux-${{ steps.chrome.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
