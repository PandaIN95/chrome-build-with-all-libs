name: Build Chrome Bundle

on:
  schedule:
    - cron: '0 6 * * *' # ‚è∞ Runs daily at 06:00 UTC
  workflow_dispatch: # üîò Allow manual trigger

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v4

      - name: üì¶ Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl unzip dpkg dpkg-dev apt-utils jq

      - name: üîç Get latest stable Chrome version
        id: chrome
        run: |
          full_version=$(curl -s https://dl.google.com/linux/chrome/deb/dists/stable/main/binary-amd64/Packages | \
            grep -A1 "Package: google-chrome-stable" | grep "Version:" | head -n1 | awk '{print $2}')
          major_version=$(echo $full_version | cut -d'.' -f1)
          echo "full_version=$full_version" >> $GITHUB_OUTPUT
          echo "major_version=$major_version" >> $GITHUB_OUTPUT
          echo "Detected Chrome version: $full_version (Major: $major_version)"

      # üß† NEW: Skip release check if manually triggered
      - name: üõë Check if major release already exists
        id: check_release
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual trigger detected ‚Äî skipping release check."
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            if gh release view v${{ steps.chrome.outputs.major_version }} >/dev/null 2>&1; then
              echo "exists=true" >> $GITHUB_OUTPUT
            else
              echo "exists=false" >> $GITHUB_OUTPUT
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ======================================================
      # üß± Build for amd64
      # ======================================================
      - name: üèóÔ∏è Build Chrome Bundle (amd64)
        if: steps.check_release.outputs.exists == 'false'
        run: |
          ARCH=amd64
          mkdir -p chrome-linux-$ARCH
          cd chrome-linux-$ARCH
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_${ARCH}.deb
          dpkg-deb -x google-chrome-stable_current_${ARCH}.deb .
          mv opt/google/chrome/* .
          rm -rf opt usr google-chrome-stable_current_${ARCH}.deb
          cd ..
          
          chmod +x ./scripts/fetch-libs.sh
          ./scripts/fetch-libs.sh $ARCH

          tar -czf chrome-linux-${{ steps.chrome.outputs.full_version }}-${ARCH}.tar.gz chrome-linux-${ARCH}
          echo "‚úÖ Built amd64 bundle"

      # ======================================================
      # üß± Build for arm64
      # ======================================================
      - name: üèóÔ∏è Build Chrome Bundle (arm64)
        if: steps.check_release.outputs.exists == 'false'
        run: |
          ARCH=arm64
          mkdir -p chrome-linux-$ARCH
          cd chrome-linux-$ARCH
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_${ARCH}.deb || {
            echo "‚ö†Ô∏è No arm64 build found, skipping..."
            exit 0
          }
          dpkg-deb -x google-chrome-stable_current_${ARCH}.deb .
          mv opt/google/chrome/* .
          rm -rf opt usr google-chrome-stable_current_${ARCH}.deb
          cd ..
          
          chmod +x ./scripts/fetch-libs.sh
          ./scripts/fetch-libs.sh $ARCH

          tar -czf chrome-linux-${{ steps.chrome.outputs.full_version }}-${ARCH}.tar.gz chrome-linux-${ARCH}
          echo "‚úÖ Built arm64 bundle"

      - name: üöÄ Create Release
        if: steps.check_release.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.chrome.outputs.major_version }}
          name: Chrome ${{ steps.chrome.outputs.major_version }}
          body: |
            Automatic build of Chrome Linux bundle (Multi-Arch)
            Full version: ${{ steps.chrome.outputs.full_version }}
            Architectures: amd64, arm64
          files: |
            chrome-linux-${{ steps.chrome.outputs.full_version }}-amd64.tar.gz
            chrome-linux-${{ steps.chrome.outputs.full_version }}-arm64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
